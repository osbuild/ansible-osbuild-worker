---
- name: Verify AWS scenario
  hosts: all
  gather_facts: true
  become: true
  vars:
    osbuild_worker_config_dir: /etc/osbuild-worker
    osbuild_worker_config_dir_mode: '0755'
    osbuild_worker_config_file: "{{ osbuild_worker_config_dir }}/osbuild-worker.toml"
    osbuild_worker_config_file_mode: '0644'
    osbuild_worker_remote_worker_service_name: "osbuild-remote-worker@{{ test_osbuild_worker_server_hostname }}.service"
    osbuild_worker_secrets_mode: '0400'

  tasks:
    - name: Run tests and capture failure logs
      block:
        - name: Include common variables
          ansible.builtin.include_vars:
            file: defaults/main.yml

        - name: Gather package facts
          ansible.builtin.package_facts:
            manager: auto

        - name: Check that osbuild-composer-worker is installed
          ansible.builtin.assert:
            that:
              - ansible_facts.packages['osbuild-composer-worker'] is defined

        - name: Check status of osbuild remote worker service
          ansible.builtin.systemd:
            name: "{{ osbuild_worker_remote_worker_service_name }}"
          register: osbuild_remote_worker_service

        - name: Check that osbuild remote worker service is enabled and started
          ansible.builtin.assert:
            that:
              - osbuild_remote_worker_service.status['LoadState'] == 'loaded'
              - osbuild_remote_worker_service.status['ActiveState'] == 'active'
              - osbuild_remote_worker_service.status['UnitFileState'] == 'enabled'

        - name: Fetch the content of osbuild worker config file (Base64 encoded)
          ansible.builtin.slurp:
            src: "{{ osbuild_worker_config_file }}"
          register: osbuild_worker_config_file_content_encoded

        - name: Register (raw) content of osbuild worker config file as a variable
          ansible.builtin.set_fact:
            osbuild_worker_config_file_content: "{{ osbuild_worker_config_file_content_encoded.content | b64decode }}"

        - name: Check AWS configuration in the worker config file
          ansible.builtin.assert:
            that:
              - aws_config_part in osbuild_worker_config_file_content
              - osbuild_worker_config_file_content is not match(".*\[aws\].+bucket = .+")
              - osbuild_worker_config_file_content is not match(".*base_path = .*")
              - osbuild_worker_config_file_content is not match(".*offline_token = .*")
              - osbuild_worker_config_file_content is not match(".*\[azure\].*")
              - osbuild_worker_config_file_content is not match(".*\[gcp\].*")
              - osbuild_worker_config_file_content is not match(".*\[koji.+\].*")
          vars:
            aws_config_part: |-
              [aws]
              credentials = "{{ osbuild_worker_config_dir }}/aws-credentials"

        - name: Stat AWS credentials file
          ansible.builtin.stat:
            path: "{{ osbuild_worker_config_dir }}/aws-credentials"
          register: aws_credentials_file_stat

        - name: Check that AWS credentials file exists on the remote host
          ansible.builtin.assert:
            that:
              - aws_credentials_file_stat.stat.exists
              - aws_credentials_file_stat.stat.isreg
              - aws_credentials_file_stat.stat.mode == osbuild_worker_secrets_mode
      rescue:
        - name: Retrieve logs on failure
          ansible.builtin.shell: |
            {% raw %}
            journalctl
            {% endraw %}
          changed_when: false
          register: logfile_cmd

        - name: Display logs
          ansible.builtin.fail:
            msg: |
              {{ logfile_cmd.stdout }}
              {{ logfile_cmd.stderr }}